module frege.repl.Gui where

import Java.Net (URI, URL)
import Java.Awt (Component, ActionEvent)


pure native asHyperlinkListener "(javax.swing.event.HyperlinkListener)" :: Object -> HyperlinkListener
pure native asHyperlinkEvent "(javax.swing.event.HyperlinkEvent)" :: Object -> HyperlinkEvent


native setSize :: MutableIO Component -> Int -> Int -> IO ()

data Desktop = native java.awt.Desktop where
  native getDesktop java.awt.Desktop.getDesktop :: () -> IOMutable Desktop
  native isDesktopSupported :: MutableIO Desktop -> IO Bool
  native browse :: MutableIO Desktop -> URI -> IO () throws IOException

data HyperlinkEvent = pure native javax.swing.event.HyperlinkEvent where
  pure native getURL :: HyperlinkEvent -> Maybe URL
  pure native getDescription :: HyperlinkEvent -> String
  pure native getEventType :: HyperlinkEvent -> HyperlinkEvent_EventType

data HyperlinkEvent_EventType = pure native javax.swing.event.HyperlinkEvent.EventType where
  pure native entered javax.swing.event.HyperlinkEvent.EventType.ENTERED :: HyperlinkEvent_EventType
  pure native exited javax.swing.event.HyperlinkEvent.EventType.EXITED :: HyperlinkEvent_EventType
  pure native activated javax.swing.event.HyperlinkEvent.EventType.ACTIVATED :: HyperlinkEvent_EventType
  pure native equals :: HyperlinkEvent_EventType -> Object -> Bool
  pure native hashCode :: HyperlinkEvent_EventType -> Int
  pure native toString :: HyperlinkEvent_EventType -> String

data BorderLayout = native java.awt.BorderLayout where
  native new :: () -> IOMutable BorderLayout
              | Int -> Int -> IOMutable BorderLayout
  pure native north java.awt.BorderLayout.NORTH :: String
  pure native south java.awt.BorderLayout.SOUTH :: String
  pure native east java.awt.BorderLayout.EAST :: String
  pure native west java.awt.BorderLayout.WEST :: String
  pure native center java.awt.BorderLayout.CENTER :: String
  pure native before_first_line java.awt.BorderLayout.BEFORE_FIRST_LINE :: String
  pure native after_last_line java.awt.BorderLayout.AFTER_LAST_LINE :: String
  pure native before_line_begins java.awt.BorderLayout.BEFORE_LINE_BEGINS :: String
  pure native after_line_ends java.awt.BorderLayout.AFTER_LINE_ENDS :: String
  pure native page_start java.awt.BorderLayout.PAGE_START :: String
  pure native page_end java.awt.BorderLayout.PAGE_END :: String
  pure native line_start java.awt.BorderLayout.LINE_START :: String
  pure native line_end java.awt.BorderLayout.LINE_END :: String

data Container = native java.awt.Container where
    native add          :: MutableIO Container -> MutableIO Component -> IOMutable Component
                         | MutableIO Container -> MutableIO Component -> Object -> IO ()

    native setLayout    :: MutableIO Container -> MutableIO LayoutManager -> IO ()

data JPanel = native javax.swing.JPanel where
    native new :: () -> IOMutable JPanel
                  | MutableIO LayoutManager -> IOMutable JPanel

data LayoutManager = native java.awt.LayoutManager

data JScrollPane = native javax.swing.JScrollPane where
  native new :: MutableIO Component -> IOMutable JScrollPane
  native setVerticalScrollBarPolicy :: MutableIO JScrollPane -> Int -> IO ()
  native setHorizontalScrollBarPolicy :: MutableIO JScrollPane -> Int -> IO ()
  pure native horizontal_scrollbar_as_needed javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED :: Int
  pure native vertical_scrollbar_always javax.swing.JScrollPane.VERTICAL_SCROLLBAR_ALWAYS :: Int
  pure native horizontal_scrollbar_always javax.swing.JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS :: Int

data JComponent = native javax.swing.JComponent where
  native setPreferredSize :: MutableIO JComponent -> MutableIO Dimension -> IO ()
  pure native when_focused javax.swing.JComponent.WHEN_FOCUSED :: Int
  native getInputMap :: MutableIO JComponent -> IOMutable InputMap
  native getActionMap :: MutableIO JComponent -> IOMutable ActionMap

data JOptionPane = native javax.swing.JOptionPane where
   native showInputDialog javax.swing.JOptionPane.showInputDialog :: Object -> IO String
   pure native plain_message javax.swing.JOptionPane.PLAIN_MESSAGE :: Int
   native showMessageDialog javax.swing.JOptionPane.showMessageDialog
     :: Maybe (MutableIO Component) -> Object -> IO ()
      | Maybe (MutableIO Component) -> Object -> String -> Int -> IO ()

data Window = native java.awt.Window where
  native pack :: MutableIO Window -> IO ()
  native addWindowListener :: MutableIO Window -> MutableIO WindowListener -> IO ()
  native setLocation :: MutableIO Window -> Int -> Int -> IO ()

data WindowListener = native java.awt.event.WindowListener

data GridLayout = native java.awt.GridLayout where
  native new :: Int -> Int -> IOMutable GridLayout
              | Int -> Int -> Int -> Int -> IOMutable GridLayout

data JTextComponent = native javax.swing.text.JTextComponent where
  native getDocument :: MutableIO JTextComponent -> IOMutable Document
  native setCaretPosition :: MutableIO JTextComponent -> Int -> IO ()

data Dimension = native java.awt.Dimension where
  native new :: Int -> Int -> IOMutable Dimension

data JTextArea = native javax.swing.JTextArea where
  native new :: String -> Int -> Int -> IOMutable JTextArea

instance Eq HyperlinkEvent_EventType where
  e1 == e2 = e1.equals $ asObject e2

data HyperlinkListener = pure native javax.swing.event.HyperlinkListener where
  native hyperlinkUpdate :: HyperlinkListener -> HyperlinkEvent -> IO ()
  native clazz "javax.swing.event.HyperlinkListener.class" :: Class HyperlinkListener

data JEditorPane = native javax.swing.JEditorPane where
  native new :: String -> String -> IOMutable JEditorPane
  native addHyperlinkListener :: MutableIO JEditorPane -> HyperlinkListener -> IO ()
  native setEditable :: MutableIO JEditorPane -> Bool -> IO ()

data Document = native javax.swing.text.Document where
  native insertString :: MutableIO Document -> Int -> String -> Maybe AttributeSet -> IO () throws BadLocationException
  native getLength :: MutableIO Document -> IO Int

data BadLocationException = pure native javax.swing.text.BadLocationException
derive Exceptional BadLocationException

data AttributeSet = pure native javax.swing.text.AttributeSet

data InputMap = native javax.swing.InputMap where
  native get :: MutableIO InputMap -> KeyStroke -> IO Object
  native put :: MutableIO InputMap -> KeyStroke -> Object -> IO ()

data ActionMap = native javax.swing.ActionMap where
  native put :: MutableIO ActionMap -> Object -> MutableIO Action -> IO ()

data Action = native javax.swing.Action

data WindowEvent = native java.awt.event.WindowEvent

data KeyStroke = pure native javax.swing.KeyStroke where
  pure native getKeyStroke javax.swing.KeyStroke.getKeyStroke :: String -> KeyStroke

private pure native asObject "(java.lang.Object)" :: a -> Object